facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive Ind",
"non-Energy Intensive Ind",
"SER",
"Other Sectors"))) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_gva <- ggplot(data = gva_diff_filter, aes(x = Scenario, y = Value))
plot_gva +
geom_bar(stat='identity', aes(fill =  Scenario), color = "black") +
facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive \nIndustries",
"Other Industries",
"Services",
"Other Sectors"))) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
library(tidyverse)
library(readxl)
library(extrafont)
library(showtext)
#font_import()
loadfonts()
#read gdp data from results
gdp_disag <- read_excel("report_pivot_merged.xlsx", sheet = "gdpreal_disag_yr")
# Spread scenarios to be able to change them
gdp_diff <- spread(gdp_disag, key = "Scenario", value = "Value")
# Transform each scenario into the relative difference to reference scenario
gdp_diff <- gdp_diff %>% mutate(bau = (bau-ref)/ref)
gdp_diff <- gdp_diff %>% mutate(cAP = (cAP-ref)/ref)
gdp_diff <- gdp_diff %>% mutate(inv = (inv-ref)/ref)
gdp_diff <- gdp_diff %>% mutate(lab = (lab-ref)/ref)
gdp_diff <- gdp_diff %>% mutate(vat = (vat-ref)/ref)
# drop non-EU regions, years after 2030 and categories that are not 'total'
gdp_diff_filter_2 <- filter(gdp_diff, grepl('DEU|EU28', Region))
gdp_diff_filter_2 <- filter(gdp_diff_filter_2, grepl('2030', Year))
gdp_diff_filter_2 <- filter(gdp_diff_filter_2, Type != 'total' & Type != 'total_no_cons_tax')
# drop ref
gdp_diff_filter_2 <- subset(gdp_diff_filter_2, select = -c(ref))
# gather scenarios
gdp_diff_filter_2 <- gather(gdp_diff_filter_2, 'bau', 'cAP', 'inv', 'vat', 'lab', key = 'Scenario', value = 'Value')
gdp_diff_filter_2[[4]] = toupper(gdp_diff_filter_2[[4]])
gdp_diff_filter_2$Scenario <- factor(gdp_diff_filter_2$Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU"))
gdp_diff_filter_2 <- gdp_diff_filter_2 %>%
mutate(Type = str_replace(Type, "cons_gov", "Government's \nConsumption")) %>%
mutate(Type = str_replace(Type, "cons_hh", "Households' \nConsumption")) %>%
mutate(Type = str_replace(Type, "inv", "Investments")) %>%
mutate(Type = str_replace(Type, "trade", "Trade")) %>%
mutate(Region = str_replace(Region, "DEU", "Germany")) %>%
mutate(Region = str_replace(Region, "EU28", "EU-28"))
#font_import(pattern = "lmroman*")
#loadfonts()
#font_import()
loadfonts(device = "win")
windowsFonts()
plot_gdp <- ggplot(data = gdp_diff_filter_2, aes(x = Scenario, y = Value))
plot_gdp +
geom_bar(stat="identity",aes(fill = Scenario), color = black) +
facet_grid( Region ~ Type) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), breaks = seq(-0.2, 0.15,0.05)) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_gdp <- ggplot(data = gdp_diff_filter_2, aes(x = Scenario, y = Value))
plot_gdp +
geom_bar(stat="identity",aes(fill = Scenario), color = "black") +
facet_grid( Region ~ Type) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), breaks = seq(-0.2, 0.15,0.05)) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_gva <- ggplot(data = gva_diff_filter, aes(x = Scenario, y = Value))
plot_gva +
geom_bar(stat='identity', aes(fill =  Scenario), color = "black") +
facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive \nIndustries",
"Other Industries",
"Services",
"Other Sectors"))) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), breaks = seq(-0.2, 0.15,0.05)) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_gva <- ggplot(data = gva_diff_filter, aes(x = Scenario, y = Value))
plot_gva +
geom_bar(stat='identity', aes(fill =  Scenario), color = "black") +
facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive \nIndustries",
"Other Industries",
"Services",
"Other Sectors"))) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), ) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_gva <- ggplot(data = gva_diff_filter, aes(x = Scenario, y = Value))
plot_gva +
geom_bar(stat='identity', aes(fill =  Scenario), color = "black") +
facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive \nIndustries",
"Other Industries",
"Services",
"Other Sectors"))) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), breaks = seq(-0.025, 0.02,0.01)) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_gva <- ggplot(data = gva_diff_filter, aes(x = Scenario, y = Value))
plot_gva +
geom_bar(stat='identity', aes(fill =  Scenario), color = "black") +
facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive \nIndustries",
"Other Industries",
"Services",
"Other Sectors"))) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), breaks = seq(-0.025, 0.02,0.005)) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_gva <- ggplot(data = gva_diff_filter, aes(x = Scenario, y = Value))
plot_gva +
geom_bar(stat='identity', aes(fill =  Scenario), color = "black") +
facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive \nIndustries",
"Other Industries",
"Services",
"Other Sectors"))) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), breaks = seq(-0.025, 0.02,0.01)) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
# Spread scenarios to be able to change them
gva_diff <- spread(gva_real, key = "Scenario", value = "Value")
# Transform each scenario into the relative difference to reference scenario
gva_diff <- gva_diff %>% mutate(bau = (bau-ref)/ref)
gva_diff <- gva_diff %>% mutate(cAP = (cAP-ref)/ref)
gva_diff <- gva_diff %>% mutate(inv = (inv-ref)/ref)
gva_diff <- gva_diff %>% mutate(lab = (lab-ref)/ref)
gva_diff <- gva_diff %>% mutate(vat = (vat-ref)/ref)
# drop non-EU regions, years after 2030 and categories that are not 'total'
gva_secs <- filter(gva_diff, grepl('DEU|EU28', Region))
gva_secs <- filter(gva_secs, grepl('2030', Year))
gva_secs <- filter(gva_secs, grepl('Energy Intensive Ind|non-Energy Intensive Ind|Other Sectors|SER', Sector))
# drop ref
gva_secs <- subset(gva_secs, select = -c(ref))
# gather scenarios
gva_secs <- gather(gva_secs, 'bau', 'cAP', 'inv', 'vat', 'lab', key = 'Scenario', value = 'Value')
# update scenario names and change order
gva_secs[[4]] = toupper(gva_secs[[4]])
gva_secs$Scenario <- factor(gva_secs$Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU"))
gva_secs$Sector <- factor(gva_secs$Sector, levels = c("Energy Intensive Ind",
"non-Energy Intensive Ind",
"SER",
"Other Sectors"))
gva_secs <- gva_secs %>%
mutate(Sector = str_replace(Sector, "SER", "Services")) %>%
mutate(Sector = str_replace(Sector, "non-Energy Intensive Ind", "Other Industries")) %>%
mutate(Sector = str_replace(Sector, "Energy Intensive Ind", "Energy Intensive \nIndustries")) %>%
mutate(Region = str_replace(Region, "DEU", "Germany")) %>%
mutate(Region = str_replace(Region, "EU28", "EU-28"))
plot_gva <- ggplot(data = gva_secs, aes(x = Scenario, y = Value))
plot_gva +
geom_bar(stat='identity', aes(fill =  Scenario), color = "black") +
facet_grid(Region ~ factor(Sector, levels = c("Energy Intensive \nIndustries",
"Other Industries",
"Services",
"Other Sectors"))) +
scale_y_continuous(name = "Difference to reference scenario [REF]",
labels = scales::label_percent(accuracy = 1L), breaks = seq(-0.025, 0.02,0.01)) +
theme_bw()+
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
library(tidyverse)
library(readxl)
library(extrafont)
library(showtext)
#font_import()
loadfonts(device = "win")
ets_prices <-  read_excel("report_pivot_merged.xlsx", sheet = "pco2_ets_yr")
netsr_prices <- read_excel("report_pivot_merged.xlsx", sheet = "pco2_netsr_yr")
View(ets_prices)
View(netsr_prices)
ets_prices$Region = "EU28"
ets_prices$Region = "EU28"
ets_prices <- ets_prices[, c(1,4,2,3)]
all_prices <- full_join(ets_prices, netsr_prices, by = Region)
all_prices <- full_join(ets_prices, netsr_prices, by = "Region")
View(all_prices)
all_prices <- full_join(ets_prices, netsr_prices, by = "Scenario")
all_prices <- inner_join(ets_prices, netsr_prices, by = "Scenario")
View(all_prices)
all_prices <- inner_join(ets_prices, netsr_prices, by = c("Scenario", "Year", "Region"))
all_prices <- rbind(ets_prices, netsr_prices)
all_prices_filter %>%
filter(Year == 2030)
all_prices %>%
filter(Year == 2030)
all_prices %>%
filter(Year == 2030) %>%
subset(Region %in% c("EU28",
"DEU",
"FRA",
"ITA",
"POL",
"UKI",
"ESP",
"BNL",
"EUN",
"EUS"))
all_prices_filter <- all_prices %>%
filter(Year == 2030) %>%
subset(Region %in% c("EU28",
"DEU",
"FRA",
"ITA",
"POL",
"UKI",
"ESP",
"BNL",
"EUN",
"EUS"))
all_prices_filter[[1]] = toupper(all_scenarios_filter[[1]])
all_prices_filter <- all_prices %>%
filter(Year == 2030) %>%
subset(Region %in% c("EU28",
"DEU",
"FRA",
"ITA",
"POL",
"UKI",
"ESP",
"BNL",
"EUN",
"EUS"))
all_prices_filter[[1]] = toupper(all_prices_filter[[1]])
all_prices_filter$Scenario <- factor(all_prices_filter$Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU"))
all_prices_filter <- all_prices %>%
filter(Year == 2030) %>%
subset(Region %in% c("EU28",
"DEU",
"FRA",
"ITA",
"POL",
"UKI",
"ESP",
"BNL",
"EUN",
"EUS"))
all_prices_filter[[1]] = toupper(all_prices_filter[[1]])
all_prices_filter$Scenario <- factor(all_prices_filter$Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU"))
View(all_prices_filter)
all_prices_filter <- all_prices %>%
filter(Year == 2030) %>%
subset(Region %in% c("EU28",
"DEU",
"FRA",
"ITA",
"POL",
"UKI",
"ESP",
"BNL",
"EUN",
"EUS"))
all_prices_filter[[1]] = toupper(all_prices_filter[[1]])
all_prices_filter$Scenario <- factor(all_prices_filter$Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU",
"REF"))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_violin()
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_violin(data = filter(all_prices_filter, Region != "EU28"))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_dotplot(data = filter(all_prices_filter, Region != "EU28"))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28", Region == "DEU"))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(fill = Region))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(color = Region))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(color = Region)) +
theme_bw()
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(color = Region), size = 3) +
theme_bw()
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(shape = Region), size = 3) +
theme_bw()
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(shape = Region, fill = Scenario), size = 3) +
theme_bw()
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(shape = Region), size = 3) +
theme_bw() +
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(shape = Region), size = 3) +
scale_y_continuous(name = "Price of t.eqCO2 [€ 2011]",
breaks = seq(0, 600,100)) +
theme_bw() +
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
ref_prices <- filter(all_prices_filter, Scenario == "REF" & Region == "EU28")
all_prices_filter <- filter(all_prices_filter, Scenario != "REF")
all_prices_filter <- rbind(all_prices_filter, ref_prices)
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(shape = Region), size = 3) +
scale_y_continuous(name = "Price of t.eqCO2 [€ 2011]",
breaks = seq(0, 600,100)) +
theme_bw() +
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
ref_prices <- filter(all_prices_filter, Scenario == "REF" & Region == "EU28")
all_prices_filter <- filter(all_prices_filter, Scenario != "REF")
all_prices_filter <- rbind(all_prices_filter, ref_prices)
all_prices_filter$Scenario <- factor(all_prices_filter$Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU",
"REF"))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(shape = Region), size = 3) +
scale_y_continuous(name = "Price of t.eqCO2 [€ 2011]",
breaks = seq(0, 600,100)) +
theme_bw() +
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
ref_prices <- filter(all_prices_filter, Scenario == "REF" & Region == "EU28")
all_prices_filter <- filter(all_prices_filter, Scenario != "REF")
all_prices_filter <- rbind(all_prices_filter, ref_prices)
all_prices_filter %>% mutate(Scenario = factor(Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU",
"REF")))
ref_prices <- filter(all_prices_filter, Scenario == "REF" & Region == "EU28")
all_prices_filter <- filter(all_prices_filter, Scenario != "REF")
all_prices_filter <- rbind(all_prices_filter, ref_prices)
all_prices_filter <- all_prices_filter %>% mutate(Scenario = factor(Scenario, levels = c("INV",
"CAP",
"LAB",
"VAT",
"BAU",
"REF")))
plot_price <-ggplot(all_prices_filter, aes(x = Scenario, y = Value))
plot_price +
geom_boxplot(data = filter(all_prices_filter, Region != "EU28"), aes(fill = Scenario)) +
geom_point(data = filter(all_prices_filter, Region == "EU28" | Region == "DEU"), aes(shape = Region), size = 3) +
scale_y_continuous(name = "Price of t.eqCO2 [€ 2011]",
breaks = seq(0, 600,100)) +
theme_bw() +
theme(text         = element_text(size=10, family="Palatino Linotype"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.position = "bottom")
